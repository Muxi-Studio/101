(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{465:function(t,a,s){"use strict";s.r(a);var e=s(46),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"react-学习指南"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-学习指南"}},[t._v("#")]),t._v(" React 学习指南")]),t._v(" "),s("h2",{attrs:{id:"初学者看这里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初学者看这里"}},[t._v("#")]),t._v(" 初学者看这里")]),t._v(" "),s("h3",{attrs:{id:"引子-react-与-hyperapp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引子-react-与-hyperapp"}},[t._v("#")]),t._v(" 引子：React 与 Hyperapp")]),t._v(" "),s("p",[t._v("React 是 Facebook 于 2013 年开源的 JS 库，用于构建用户界面。这也是目前前端界最流行的 UI 基础库。")]),t._v(" "),s("p",[t._v("我们首先让大家接触 Hyperapp ，而不是直接学 React，就是因为 React 本身的设计思想，其实很简单。就是 UI = f(state)。而 Hyperapp 就是基于这个思想设计的简化版 React。")]),t._v(" "),s("p",[t._v("所以 React 相比 Hyperapp，更强大，适合真正的生产级别应用。但核心思想其实是一致的。懂了 Hyperapp，你可以很快上手 React。")]),t._v(" "),s("p",[t._v("React 的组件也是一个函数（React 16 之前只支持 Class 组件，不过目前我们一般都使用 React 16+，可以全盘使用函数式组件）。函数返回的是 JSX 表示的虚拟 DOM 节点树，和 Hyperapp 一致。")]),t._v(" "),s("p",[t._v("但相比 Hyperapp，React 的每个组件都可以有自己的状态，而不是只有顶层的 App 才存储状态。")]),t._v(" "),s("blockquote",[s("p",[t._v("React 可以通过 Redux 这样的状态管理工具去拥有全局状态，组件局部状态和全局状态可以混合使用。Redux 同样和 Hyperapp 的状态管理有相似之处。")])]),t._v(" "),s("p",[t._v("React 在函数式组件中的局部状态和副作用，是通过 Hook 来实现的。本身单纯的函数式组件是没有状态，也不能产生副作用的（比如发送网络请求），Hook 的出现改变了这一点。目前我们可以不用了解 Hook 具体的原理，只要掌握 Hook 的使用即可。")]),t._v(" "),s("p",[t._v("让我们来看一个简单的例子：")]),t._v(" "),s("div",{staticClass:"language-jsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useState "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Example")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n\t\t\t")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("You clicked ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(" times")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n\t\t\t")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),s("span",{pre:!0,attrs:{class:"token script language-javascript"}},[s("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Click me")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n\t\t")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Codepen 实例")]),t._v(" "),s("p",[s("code",[t._v("useState")]),t._v(" 是用于获取状态的 Hook。Hook 其实就是普通的函数调用。"),s("code",[t._v("useState")]),t._v(" 调用之后会返回一个数组，第一项是状态的值，第二项是一个用来修改状态的函数。")]),t._v(" "),s("p",[t._v("我们只要记住，每次组件被调用，组件（函数）就会执行，然后 "),s("code",[t._v("useState")]),t._v(" 就会被调用。调用之后就可以拿到最新的状态。")]),t._v(" "),s("p",[t._v("通过这个例子，我们就可以实现一个计数器，需要注意的是，React 的事件回调属性是驼峰的形式，并且回调只是普通的函数，里面可以执行任意逻辑，无需像 Hyperapp 那样返回新的 state。")]),t._v(" "),s("p",[t._v("此外 React 比起 Hyperapp 还有一些核心功能")]),t._v(" "),s("ul",[s("li",[t._v("支持合成事件，抹平了不同浏览器的事件兼容性")]),t._v(" "),s("li",[t._v("内置了调度系统，会根据情况安排最合适的渲染时机，避免卡顿")]),t._v(" "),s("li",[t._v("使用 fiber 架构，可以把组件的渲染工作拆分到多次完成，避免卡顿")]),t._v(" "),s("li",[t._v("支持跨端，可以通过 React-native 编写 安卓/iOS/Web 三段通用的 App")]),t._v(" "),s("li",[t._v("Context，Ref，Suspense，Fragment，Portal，各种 Hooks 等等多种多样的 API")])]),t._v(" "),s("h3",{attrs:{id:"学习材料推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习材料推荐"}},[t._v("#")]),t._v(" 学习材料推荐")]),t._v(" "),s("p",[t._v("学 React 之前需要明确一点，React 在 16.8 版本推出了 Hooks。Hooks 让函数式组件可以拥有状态和副作用，而函数式组件相比 Class 组件更符合 UI = f(state) 的理念。因此目前我们编写的组件，都是用 Hooks 实现的。")]),t._v(" "),s("p",[t._v("但官网上的教程，大部分都是以 Class 组件为基础的。所以目前还没法避免接触 Class 组件，以后在历史项目中也可能会遇到。Class 组件其实也不难学。但大家要把重心放到函数组件上。")]),t._v(" "),s("p",[t._v("首先要看官方文档，这是免不了的。首先是 "),s("a",{attrs:{href:"https://reactjs.org/docs/hello-world.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Main Concepts"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("ol",[s("li",[t._v("了解基础： Props，State，组件定义，Class 组件声明周期，事件监听。")]),t._v(" "),s("li",[t._v("了解如何编写条件渲染，列表渲染，关注 key 的作用。")]),t._v(" "),s("li",[t._v("特别要关注：状态提升（Lifting State Up），组合 vs 继承（Composition vs Inheritance），受控组件 vs 非受控组件（Controlled Components vs Uncontrolled Components）")])]),t._v(" "),s("p",[t._v("然后是 Hooks，看官方的 "),s("a",{attrs:{href:"https://reactjs.org/docs/hooks-intro.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hooks 教程"),s("OutboundLink")],1),t._v("。useState 和 useEffect 是必须掌握的，其他的可以浏览一下。")]),t._v(" "),s("p",[t._v("之后就可以看一本完整的小册："),s("a",{attrs:{href:"https://leanpub.com/the-road-to-learn-react-chinese/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Way To React"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("blockquote",[s("p",[t._v("这本书是免费的，把价格拖到 0 就行。如果下载有问题，可以在组群反馈。")])]),t._v(" "),s("p",[t._v("这本书的食用方式：")]),t._v(" "),s("ul",[s("li",[t._v("这本书用一个 Hacker News 程序员论坛的例子，贯穿全书，每一节后面都有源码链接，是在线的，可以看当前章节完成之后书本例子的代码。一定要结合代码看，最好可以自己在本地起一个项目，跟着写。")]),t._v(" "),s("li",[t._v("每章结束后会有一些链接，主要是章节里提到的 JS 知识点，如果觉得有不懂的 JS 知识点，不妨先停下来复习一下。")])]),t._v(" "),s("h3",{attrs:{id:"小练习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小练习"}},[t._v("#")]),t._v(" 小练习")]),t._v(" "),s("p",[t._v("将 Class 组件实现的 "),s("a",{attrs:{href:"https://reactjs.org/tutorial/tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 官方教程"),s("OutboundLink")],1),t._v(" 改造为函数式组件（Hooks）版本。新建仓库 react-tutorial-hooks 并上传到 Github。")]),t._v(" "),s("h2",{attrs:{id:"进阶内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进阶内容"}},[t._v("#")]),t._v(" 进阶内容")]),t._v(" "),s("ul",[s("li",[t._v("受控 vs 非受控")]),t._v(" "),s("li",[t._v("Advanced Topics")]),t._v(" "),s("li",[t._v("合成事件")]),t._v(" "),s("li",[t._v("ErrorBourbonry")]),t._v(" "),s("li",[t._v("设计模式：HOC + renderProps")]),t._v(" "),s("li",[t._v("自定义 Hooks")]),t._v(" "),s("li",[t._v("Suspense")])]),t._v(" "),s("p",[t._v("// todo")]),t._v(" "),s("h2",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[t._v("// todo")])])}),[],!1,null,null,null);a.default=n.exports}}]);