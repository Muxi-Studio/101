(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{446:function(t,e,s){"use strict";s.r(e);var r=s(46),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ubuntu-18-04-配置指南-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-18-04-配置指南-1"}},[t._v("#")]),t._v(" Ubuntu 18.04 配置指南(1)")]),t._v(" "),s("p",[t._v("这几天都在折腾 Ubuntu，积累了一些经验，想把它记录下来分享给大家。主要包括我在使用过程中遇到的问题和解决方法，配置系统、桌面环境，还有各种界面美化、插件安装等等。"),s("br"),t._v("\n本以为 Ubuntu18.04 会修复很多图形界面的 BUG 和设计失误，然而并没有，用了几天感觉很失望。各种小问题不断出现，极度影响用户体验。（绝大部分都是 GUI 的问题）"),s("br"),t._v("\n下面开始进入正题～～ （本文持续更新）")]),t._v(" "),s("h2",{attrs:{id:"安装过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装过程"}},[t._v("#")]),t._v(" 安装过程")]),t._v(" "),s("p",[t._v("由于显卡驱动等问题，可能无法进入 Ubuntu 安装界面。"),s("br"),t._v("\n在 Install Ubuntu 界面时 按“e”建进入编辑，修改倒数第二行："),s("br"),t._v("\n将"),s("br"),t._v(" "),s("code",[t._v("quite splash ---")]),s("br"),t._v("\n改为"),s("br"),t._v(" "),s("code",[t._v("quite splash nomodeset")])]),t._v(" "),s("p",[t._v("nomodeset 的作用")]),t._v(" "),s("blockquote",[s("p",[t._v("The newest kernels have moved the video mode setting into the kernel. So all the programming of the hardware specific clock rates and registers on the video card happen in the kernel rather than in the X driver when the X server starts.. This makes it possible to have high resolution nice looking splash (boot) screens and flicker free transitions from boot splash to login screen. Unfortunately, on some cards this doesnt work properly and you end up with a black screen. Adding the nomodeset parameter instructs the kernel to not load video drivers and use BIOS modes instead until X is loaded."),s("br"),t._v("\n翻译"),s("br"),t._v("\n最新的内核已经把视频模式设置嵌入内核中，所以所有显卡硬件程序的指定时钟和寄存器当图形服务器启动时在内核进行而不是图形设备运行，这使得我们在启动时可以看到不闪的和高分辨率的好看的启动界面，但是，在某些视频卡它不能正常工作而现实黑屏，增加 nomodeset 参数则告诉内核不要加载显卡而用 BIOS 模式直到图形界面运行")])]),t._v(" "),s("h2",{attrs:{id:"配置-ubuntu-系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-ubuntu-系统"}},[t._v("#")]),t._v(" 配置 Ubuntu 系统")]),t._v(" "),s("h3",{attrs:{id:"添加源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加源"}},[t._v("#")]),t._v(" 添加源")]),t._v(" "),s("p",[s("strong",[t._v("什么是软件源?")]),s("br"),t._v("\n源,在 Ubuntu 下,它相当于软件库,需要什么软件,只要记得正确的软件名就可以用命令安装")]),t._v(" "),s("p",[s("strong",[t._v("软件源的分类")]),s("br"),t._v("\n在 Ubuntu 中软件源其实还细分为下面两种：")]),t._v(" "),s("ul",[s("li",[t._v("Ubuntu 官方软件源")]),t._v(" "),s("li",[t._v("PPA 软件源"),s("br"),t._v("\nUbuntu 官方软件源:\nUbuntu 官方软件源中包含了 Ubuntu 系统中所用到的绝大部分的软件，它对应的源列表是 /etc/apt/sources.list。只需要修改这个文件，就能添加我们想要的源。")])]),t._v(" "),s("p",[t._v("**一定要添加中科大的源！！！**推荐再加一个国内的源，比如阿里、网易、清华")]),t._v(" "),s("blockquote",[s("p",[t._v("参考资料 https://www.jianshu.com/p/57a91bc0c594")])]),t._v(" "),s("h3",{attrs:{id:"sudo-免密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sudo-免密码"}},[t._v("#")]),t._v(" sudo 免密码")]),t._v(" "),s("p",[t._v("在配置环境时，每次安装软件都要输密码感觉很麻烦，所以暂时取消 sudo 密码"),s("br"),t._v(" "),s("code",[t._v("$ sudo visudo")]),s("br"),t._v("\n最后一行添加 "),s("code",[t._v("jzc ALL=(ALL:ALL)NOPASSWD: ALL")])]),t._v(" "),s("h3",{attrs:{id:"双击-sh-行为设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#双击-sh-行为设置"}},[t._v("#")]),t._v(" 双击*.sh 行为设置")]),t._v(" "),s("p",[t._v("为了安全，系统默认的方式是：双击*.sh 开启编辑模式。但这样很不方便，如果要运行 shell 脚本，只能在终端里输入命令，右键菜单是找不到运行的。"),s("br"),t._v("\n解决方法："),s("br"),t._v("\n任意文件夹下，菜单中选择 Edit->Preference->Behavior 选项卡，可以看到默认为 View executable text files when they are opened。把其选择为 Ask each time，之后每次鼠标点击，可以让用户选择以何种方式响应双击事件。")]),t._v(" "),s("h3",{attrs:{id:"grub-设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grub-设置"}},[t._v("#")]),t._v(" grub 设置")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("解决关机卡死的问题"),s("br"),t._v(" "),s("code",[t._v("sudo vi /etc/default/grub")]),s("br"),t._v(" "),s("code",[t._v('GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"')]),t._v(" -> "),s("code",[t._v('""')]),t._v(" （删除引号中的内容）")])]),t._v(" "),s("li",[s("p",[t._v("修改等待时间"),s("br"),t._v(" "),s("code",[t._v("GRUB_TIMEOUT=5")])])]),t._v(" "),s("li",[s("p",[t._v("保存记住上次的启动项"),s("br"),t._v(" "),s("code",[t._v("GRUB_DEFAULT=saved")]),s("br"),t._v(" "),s("code",[t._v("GRUB_SAVEDEFAULT=true")])])])]),t._v(" "),s("h3",{attrs:{id:"编辑器的首选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编辑器的首选项"}},[t._v("#")]),t._v(" 编辑器的首选项")]),t._v(" "),s("p",[s("strong",[t._v("设置终端的默认编辑器")]),s("br"),t._v(" "),s("code",[t._v("update-alternatives --config editor")]),s("br"),t._v(" "),s("strong",[t._v("gedit 配置")]),s("br"),t._v("\n打开 gedit，在左上角 Activities 的右边找到 gedit，右键，选择 Preference")]),t._v(" "),s("h2",{attrs:{id:"软件设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软件设置"}},[t._v("#")]),t._v(" 软件设置")]),t._v(" "),s("h3",{attrs:{id:"安装输入法-input-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装输入法-input-method"}},[t._v("#")]),t._v(" 安装输入法 Input Method")]),t._v(" "),s("ol",[s("li",[t._v("安装 fcitx")]),t._v(" "),s("li",[t._v("设置，Language Support -> Keyboard input method system -> fcitx")]),t._v(" "),s("li",[t._v("上网搜索 搜狗输入法 for Linux 下载安装")]),t._v(" "),s("li",[t._v("重启")]),t._v(" "),s("li",[t._v("gnome 右上角 Keyboard -> Configure 添加 Sougou")])]),t._v(" "),s("h3",{attrs:{id:"科学上网"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#科学上网"}},[t._v("#")]),t._v(" 科学上网")]),t._v(" "),s("p",[s("strong",[t._v("安装 Chrome 同时保留 Firefox(很重要！！！！)")]),s("br"),t._v("\n在抓包的时候 Chrome, Firefox 各有优缺点。")]),t._v(" "),s("p",[t._v("Firefox 不能翻墙问题")]),t._v(" "),s("blockquote",[s("p",[t._v("Please also try setting network.proxy.socks_remote_dns to true in about:config. You can get a list of SOCKS proxies from samair. You may have to restart Firefox and also Clear Now the Cache and Cookies in Tools (Alt + T) > Clear Recent History.")])]),t._v(" "),s("p",[t._v("下载 chrome for linux 安装包，离线安装"),s("br"),t._v("\npip 安装 ss 客户端配置格式如下(和服务器保持一致)")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"server"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"server_ip"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"server_port"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30696")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"local_port"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1080")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"timeout"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"method"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rc4-md5"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("启动 sslocal -c /home/usr/ss.json"),s("br"),t._v("\n添加开机自启")]),t._v(" "),s("p",[t._v("kcptun 的安装及其配置"),s("br"),t._v("\n略")]),t._v(" "),s("h3",{attrs:{id:"git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("安装 git"),s("br"),t._v(" "),s("code",[t._v("sudo apt install git")])])]),t._v(" "),s("li",[s("p",[t._v("配置用户信息")])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('ubuntu:~$ git config --global user.name "Your Name Here"\nubuntu:~$ git config --global user.email "youremail@address.here"\n')])])]),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("创建秘钥文件"),s("br"),t._v(" "),s("code",[t._v('ssh-keygen -t rsa -C "你的github账号邮箱"')]),s("br"),t._v("\n默认密钥文件路径在~/.ssh，id_rsa 是私钥文件，id_rsa.pub 是公钥文件")])]),t._v(" "),s("li",[s("p",[t._v("将公钥添加到 Github"),s("br"),t._v("\n将 id_rsa.pub 文件内容全部复制"),s("br"),t._v("\n登陆到 GitHub 上，右上角小头像->Setting->SSH and GPG keys 中，点击 new SSH key")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);