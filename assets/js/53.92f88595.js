(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{467:function(t,r,e){"use strict";e.r(r);var a=e(46),n=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"大二上学期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大二上学期"}},[t._v("#")]),t._v(" 大二上学期")]),t._v(" "),e("blockquote",[e("p",[t._v("编写中")])]),t._v(" "),e("blockquote",[e("p",[t._v("大二上学期在前端方向主要的目标是，掌握网络基础（HTTP/TCP/Socket 编程），加强 JavaScript 的功底，学习 TypeScript。使用原生 JS/TS 编写一些轮子，加强代码能力。深入理解 React 相关技术栈，系统学习 CSS。")])]),t._v(" "),e("blockquote",[e("p",[t._v("大二的节奏主要靠自己把控。总的来说，知道的越多，要学的东西就越多，所以其实是一个压力越来越大的过程。但也是一个探索越来越深入的过程。大二是很容易放弃，很容易放松的阶段，这个时候主要就靠自己的自控力。如果在这个阶段可以扎实的学一些东西，其实就以及有了以后工作的能力了。大学剩下的时间，可以用来研究一些更底层和深入的东西。")])]),t._v(" "),e("h2",{attrs:{id:"任务一-csapp-网络相关章节-高优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任务一-csapp-网络相关章节-高优先级"}},[t._v("#")]),t._v(" 任务一：CSAPP 网络相关章节（高优先级）")]),t._v(" "),e("p",[t._v("通过这个任务，我们会接触 Unix 系统编程，了解信号量，系统 I/O，Socket 编程，并发编程相关知识，可以自己编写出一个简单的 HTTP Server，并通过 CGI 接口调用程序返回动态结果。")]),t._v(" "),e("p",[t._v("这几个章节里讲到的其实就是服务端开发的基石，理解了这些，就可以理解服务端的原理，从而对整个 Web 开发有一个全貌的了解。同时 HTTP 协议对于前端工程师来说，也是息息相关的。通过这个任务可以更好的理解 HTTP 协议。")]),t._v(" "),e("h3",{attrs:{id:"子任务-1-预备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子任务-1-预备"}},[t._v("#")]),t._v(" 子任务 1（预备）")]),t._v(" "),e("p",[t._v("完成 CSAPP 第 7 章的学习。Lab 选做。")]),t._v(" "),e("h3",{attrs:{id:"子任务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#子任务-2"}},[t._v("#")]),t._v(" 子任务 2")]),t._v(" "),e("p",[t._v("阅读 CSAPP 第 10，11，12 章。11 和 12 章主要是网络编程，介绍 HTTP 协议，Socket 编程和 Web Server 的基本工作原理。以及 CGI 这种协议。12 章主要介绍了主流的并发实现方式以及并发中的一些概念，比如临界区，锁。")]),t._v(" "),e("p",[t._v("阅读这些章节，思考课后练习。对于 11 章中的简单的 HTTP server，把源码下载并运行，根据课后的题目对代码进行修改。")]),t._v(" "),e("p",[t._v("对于 HTTP server 的原理，和这些章节中的知识点，写一些思考的博客。")]),t._v(" "),e("h2",{attrs:{id:"任务二-js-ts-精进-高优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任务二-js-ts-精进-高优先级"}},[t._v("#")]),t._v(" 任务二：JS/TS 精进（高优先级）")]),t._v(" "),e("h3",{attrs:{id:"javascript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),e("p",[t._v("目标：成为 JavaScript Ninja！")]),t._v(" "),e("p",[t._v("这个目标是说，我们要对 JS 的特性和语法了如指掌，并且可以写出 Idiomatic 的 JS 代码。符合 JS 特性的代码。简单的说，就是利用 JS 的一等函数的特性，围绕函数，结合一些函数式风格的概念（副作用，纯函数，组合优于继承），来编写代码。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://eloquentjavascript.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《Eloquent JavaScript》"),e("OutboundLink")],1),t._v(" 如果大一没有系统看完，推荐再好好看一下，做完里面的练习。如果看完了，也推荐把函数，对象，高阶函数，等等章节再仔细阅读一下。可以写一些笔记。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://detail.tmall.com/item.htm?spm=a230r.1.14.4.4048133bbjlB5d&id=566464604411&ns=1&abbucket=2",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JS 忍者秘籍》"),e("OutboundLink")],1),t._v(" 英文版请在团队内部咨询获取。这本书需要精读。读书笔记参考"),e("a",{attrs:{href:"https://zxc0328.github.io/diary/2018/01/2018-01-08.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://product.dangdang.com/27883708.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《你不知道的 JS》"),e("OutboundLink")],1),t._v(" 这本书其实优先级比较低，上中下推荐按顺序阅读，没有时间的话可以主要看上册。")])]),t._v(" "),e("h3",{attrs:{id:"idiomatic-js-地道的-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#idiomatic-js-地道的-js"}},[t._v("#")]),t._v(" Idiomatic JS（地道的 JS）")]),t._v(" "),e("p",[t._v("看完了上面的书，其实你已经对 Idiomatic JS 有了一定的理解了。下面还有一些材料可以辅助你理解：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=e-5obm1G_FY&list=LLHdx8Qwo6uxw0fj3gQ5yeTg&index=51",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习 JavaScript 函数式编程 - JSUnconf 2016"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=wfMtDGfHWpA",target:"_blank",rel:"noopener noreferrer"}},[t._v("Composition over Inheritance"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"typescript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),e("p",[t._v("TypeScript 是基于 JS 进行拓展的强类型语言，他包含了 JS 本身，是 JS 的超集。TS 最终编译到 JS\n执行。目前 TS 在前端生态中已经占据了越来越重要的位置。强类型的静态编译型语言是构建大型应用，保证软件质量的必要条件，因此学习 TS 在当下已经是一个必修课了。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.typescriptlang.org/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《官方手册》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://basarat.gitbooks.io/typescript/docs/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《TypeScript Deep Dive》"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("下面是一些使用技巧：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/39620591",target:"_blank",rel:"noopener noreferrer"}},[t._v("《巧用 TypeScript》"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/64423022",target:"_blank",rel:"noopener noreferrer"}},[t._v("《巧用 Typescript (二)》"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"练习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#练习"}},[t._v("#")]),t._v(" 练习！")]),t._v(" "),e("p",[t._v("首先 EloquentJS 里面的练习都是不错的。此外，还有一些不错的资源：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://coding.imooc.com/class/330.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于 TypeScript 从零重构 axios"),e("OutboundLink")],1),t._v("（视频网盘链接团队内获取）")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://scriptoj.mangojuice.top/problems?tag=all",target:"_blank",rel:"noopener noreferrer"}},[t._v("ScriptOJ"),e("OutboundLink")],1),t._v(" 里面有很多经典的 JS 编程题")])]),t._v(" "),e("blockquote",[e("p",[t._v("注：这里可能需要梳理一下常见的 JS 原生手写题目。")])]),t._v(" "),e("p",[t._v("常见的：")]),t._v(" "),e("ul",[e("li",[t._v("实现 Event Emitter")]),t._v(" "),e("li",[t._v("实现防抖/节流")]),t._v(" "),e("li",[t._v("ES5 实现 Class")]),t._v(" "),e("li",[t._v("实现 Bind")]),t._v(" "),e("li",[t._v("实现简单的 MVVM")]),t._v(" "),e("li",[t._v("实现字符串模板引擎")]),t._v(" "),e("li",[t._v("实现 Promise")])]),t._v(" "),e("h2",{attrs:{id:"任务三-react-相关技术学习-中优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任务三-react-相关技术学习-中优先级"}},[t._v("#")]),t._v(" 任务三：React 相关技术学习（中优先级）")]),t._v(" "),e("p",[t._v("React 相关的，因为更新的很快，而且社区里的最佳实践层出不穷，所以看书的部分比较少，看代码的部分比较多。")]),t._v(" "),e("p",[t._v("书籍：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/book/5ba42844f265da0a8a6aa5e9",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 实战：设计模式和最佳实践"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://product.dangdang.com/24135483.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入 React 技术栈"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("相关技术：")]),t._v(" "),e("p",[t._v("下面列了 React 生态下常用的相关技术，可以浏览一下，有一个大致的了解：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://reacttraining.com/react-router/web",target:"_blank",rel:"noopener noreferrer"}},[t._v("React-router"),e("OutboundLink")],1),t._v(" React 社区最热门的 router 实现。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/facebook/create-react-app",target:"_blank",rel:"noopener noreferrer"}},[t._v("Create-react-app"),e("OutboundLink")],1),t._v(" React 的官方脚手架，用的非常广泛。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://redux.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),e("OutboundLink")],1),t._v(" 最流行的状态管理方案。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/redux-saga/redux-saga",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux-saga"),e("OutboundLink")],1),t._v(" Redux 中使用 saga 来隔离副作用，大型 Redux 应用必备。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/mobxjs/mobx",target:"_blank",rel:"noopener noreferrer"}},[t._v("MobX"),e("OutboundLink")],1),t._v(" 和 Redux 齐名的状态管理方案，不同于单向数据流，MobX 提供了类似 Vue 的依赖搜集和数据绑定机制。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://dvajs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("dvajs"),e("OutboundLink")],1),t._v(" 集合了 Redux/React-router/Redux-saga 的应用框架，并提供了状态管理层的模块机制。在真实生产中，我们往往不会直接使用 Redux 而是使用 dva 之类的框架来帮助我们快速的进行开发。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://umijs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("umijs"),e("OutboundLink")],1),t._v(" umijs 是一个快速搭建中后台应用的框架/工具，在使用蚂蚁系技术（Ant design/dva）搭建管理后台时，umijs 是最好的选择。umijs 还封装了构建工具，类似 Create-react-app，但更加的强大。")])]),t._v(" "),e("p",[t._v("React 关键知识点学习：")]),t._v(" "),e("p",[t._v("// TODO")]),t._v(" "),e("p",[t._v("官网文档")]),t._v(" "),e("ul",[e("li",[t._v("Hooks")]),t._v(" "),e("li",[t._v("?")])]),t._v(" "),e("p",[t._v("源码学习：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/jorgebucaran/hyperapp",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hyperapp"),e("OutboundLink")],1),t._v(" 极简的 React 风格，基于 virtual DOM 的组件框架。看懂他的源码就可以大致搞懂 React 的工作流程，以及 Virtual DOM 的具体原理。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://redux.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Redux"),e("OutboundLink")],1),t._v(" Redux 的源码其实很简单。可以搜 Redux 源码分析，或者实现一个 Redux 这样的文章参考。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://react-redux.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React-redux"),e("OutboundLink")],1),t._v(" React-redux 涉及很多精妙的设计，将 Redux 和 React 组件绑定起来，非常值得一看。也对 Redux 的性能优化等等有帮助。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/NervJS/taro",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tarojs"),e("OutboundLink")],1),t._v(" Taro 是一个类 React 的实现，对于理解 React 内部实现有帮助。同时也是一个不错的开源项目，值得研究。")])]),t._v(" "),e("h2",{attrs:{id:"任务四-css-系统学习-中优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任务四-css-系统学习-中优先级"}},[t._v("#")]),t._v(" 任务四：CSS 系统学习（中优先级）")]),t._v(" "),e("p",[t._v("CSS 其实很少有人比较系统的掌握。当下的时代，Flex 等等新布局的推出，浏览器兼容性的优化，不再要求每一个前端工程师都是 CSS 大师。但对 CSS 有系统了解，对于今后走职业前端道路（会接触页面重构之类的工作）的同学来说，是有很大的好处的。会让你理解浏览器渲染 CSS 的一些规则，不再盲目的尝试，而是一步到位。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://product.dangdang.com/27380293.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《CSS 权威指南（第四版）》"),e("OutboundLink")],1),t._v(" 不用全部看，不现实，根据自己的需求看。比如对布局想系统了解就看 BFC 和 IFC，还有 Flex 相关的章节。但最基础的一些章节必须要看，比如选择器，优先级之类的。")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://www.manning.com/books/css-in-depth",target:"_blank",rel:"noopener noreferrer"}},[t._v("《CSS in Depth》"),e("OutboundLink")],1),t._v(" 电子版团队内获取")]),t._v(" "),e("li",[e("a",{attrs:{href:"http://product.dangdang.com/25206611.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《CSS 世界》"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"拓展-函数式编程-有多余时间-推荐学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拓展-函数式编程-有多余时间-推荐学习"}},[t._v("#")]),t._v(" 拓展：函数式编程（有多余时间，推荐学习）")]),t._v(" "),e("p",[t._v("函数式编程是区别于传统的面向对象编程的一种范式。因为前端主要使用的 JavaScript 是带有一些函数式特性的，因此前端同学也经常会接触到一下函数式的概念。同时前端生态圈里面的很多技术都是来源于函数式圈子。所以系统的学习函数式编程是很有必要的。")]),t._v(" "),e("h3",{attrs:{id:"函数式-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#函数式-js"}},[t._v("#")]),t._v(" 函数式 + JS")]),t._v(" "),e("p",[t._v("用 JS 为例子介绍函数式编程，相对来说，比较适合前端同学：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://product.dangdang.com/25286300.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript 函数式编程指南》"),e("OutboundLink")],1),t._v(" 推荐")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://github.com/getify/Functional-Light-JS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Functional-Light-JS"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://product.dangdang.com/24038062.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端函数式攻城指南"),e("OutboundLink")],1),t._v(" 偏 Clojure 风格，比较硬核")])]),t._v(" "),e("h3",{attrs:{id:"正统的函数式-haskell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正统的函数式-haskell"}},[t._v("#")]),t._v(" 正统的函数式：Haskell")]),t._v(" "),e("p",[t._v("如果对函数式有很大的兴趣，可以学一门正统的函数式语言，比如 Haskell。")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"http://product.dangdang.com/23399176.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Haskell 趣学指南"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"拓展-渲染引擎-js-引擎工作原理-有多余时间-推荐学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拓展-渲染引擎-js-引擎工作原理-有多余时间-推荐学习"}},[t._v("#")]),t._v(" 拓展：渲染引擎 && JS 引擎工作原理（有多余时间，推荐学习）")]),t._v(" "),e("p",[t._v("对前端工程师来说，了解浏览器的工作原理，包括渲染引擎和 JS 引擎的原理，对于理解 CSS 和 JS 都大有好处。")]),t._v(" "),e("p",[t._v("对这方面有兴趣的同学，可以看以下的资料：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://time.geekbang.org/column/intro/154",target:"_blank",rel:"noopener noreferrer"}},[t._v("重学前端"),e("OutboundLink")],1),t._v(" 资源团队内部咨询")])]),t._v(" "),e("blockquote",[e("p",[t._v("可以补上更多资料")])])])}),[],!1,null,null,null);r.default=n.exports}}]);